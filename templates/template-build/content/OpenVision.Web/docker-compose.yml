version: '3.4'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - './shared/nginx/vhost.d:/etc/nginx/vhost.d'
      - './shared/nginx/certs:/etc/nginx/certs:ro'
    networks:
      proxy: null
      openvisionui:
        aliases:
          - auth.openvision.com
          - account.openvision.com
          - account-api.openvision.com
          - api.openvision.com
          - www.openvision.com
    restart: always
  openvision.server:
    image: '${DOCKER_REGISTRY-}openvision-server'
    build:
      context: .
      dockerfile: src/OpenVision.Server/Dockerfile
    container_name: openvision-server
    environment:
      - VIRTUAL_PORT=8080
      - VIRTUAL_HOST=api.openvision.com
      - 'ConnectionStrings__DataDbConnection=Server=db;Database=OpenVision;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=true'
      - 'OidcConfiguration__Authority=https://auth.openvision.com'
      - OidcConfiguration__RequireHttpsMetadata=false
      - 'SwaggerConfiguration__SwaggerEndpoint=https://api.openvision.com/swagger/v1/swagger.json'
      - 'SwaggerConfiguration__AuthorizationUrl=https://auth.openvision.com/connect/authorize'
      - 'SwaggerConfiguration__TokenUrl=https://auth.openvision.com/connect/token'
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - db
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      openvisionui: null
  openvision.client:
    image: '${DOCKER_REGISTRY-}openvision-client'
    build:
      context: .
      dockerfile: src/OpenVision.Client/Dockerfile
    container_name: openvision-client
    environment:
      - VIRTUAL_PORT=8080
      - VIRTUAL_HOST=www.openvision.com
      - 'OpenVisionApiOptions__BaseUri=https://api.openvision.com'
      - 'OidcConfiguration__Authority=https://auth.openvision.com'
      - 'OidcConfiguration__RedirectUri=https://www.openvision.com/signin-oidc'
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - openvision.server
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      openvisionui: null
  openvision.identityserver.admin:
    image: '${DOCKER_REGISTRY-}openvision-identityserver-admin'
    build:
      context: .
      dockerfile: src/OpenVision.IdentityServer.Admin/Dockerfile
    container_name: openvision-identityserver-admin
    environment:
      - VIRTUAL_PORT=8080
      - VIRTUAL_HOST=account.openvision.com
      - 'ConnectionStrings__ConfigurationDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'ConnectionStrings__IdentityDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'ConnectionStrings__AdminLogDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'ConnectionStrings__AdminAuditLogDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'AdminConfiguration__IdentityAdminBaseUrl=https://account.openvision.com'
      - 'AdminConfiguration__IdentityAdminRedirectUri=https://account.openvision.com/signin-oidc'
      - 'AdminConfiguration__IdentityServerBaseUrl=https://auth.openvision.com'
      - AdminConfiguration__RequireHttpsMetadata=false
      - 'IdentityServerData__Clients__0__ClientUri=https://account.openvision.com'
      - 'IdentityServerData__Clients__0__RedirectUris__0=https://account.openvision.com/signin-oidc'
      - 'IdentityServerData__Clients__0__FrontChannelLogoutUri=https://account.openvision.com/signin-oidc'
      - 'IdentityServerData__Clients__0__PostLogoutRedirectUris__0=https://account.openvision.com/signout-callback-oidc'
      - 'IdentityServerData__Clients__0__AllowedCorsOrigins__0=https://account.openvision.com'
      - 'IdentityServerData__Clients__1__RedirectUris__0=https://account-api.openvision.com/swagger/oauth2-redirect.html'
      - 'Serilog__WriteTo__1__Args__connectionString=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
    command: dotnet OpenVision.IdentityServer.Admin.dll /seed
    depends_on:
      - db
      - openvision.identityserver.sts.identity
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/identitydata.json:/app/identitydata.json'
      - './shared/identityserverdata.json:/app/identityserverdata.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      openvisionui: null
  openvision.identityserver.admin.api:
    image: '${DOCKER_REGISTRY-}openvision-identityserver-admin-api'
    build:
      context: .
      dockerfile: src/OpenVision.IdentityServer.Admin.Api/Dockerfile
    container_name: openvision-identityserver-admin-api
    environment:
      - VIRTUAL_PORT=8080
      - VIRTUAL_HOST=account-api.openvision.com
      - AdminApiConfiguration__RequireHttpsMetadata=false
      - 'AdminApiConfiguration__ApiBaseUrl=https://account-api.openvision.com'
      - 'AdminApiConfiguration__IdentityServerBaseUrl=https://auth.openvision.com'
      - 'ConnectionStrings__ConfigurationDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'ConnectionStrings__IdentityDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'ConnectionStrings__AdminLogDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'ConnectionStrings__AdminAuditLogDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      openvisionui: null
  openvision.identityserver.sts.identity:
    image: '${DOCKER_REGISTRY-}openvision-identityserver-sts-identity'
    build:
      context: .
      dockerfile: src/OpenVision.IdentityServer.STS.Identity/Dockerfile
    container_name: openvision-identityserver-sts-identity
    environment:
      - VIRTUAL_PORT=8080
      - VIRTUAL_HOST=auth.openvision.com
      - 'ConnectionStrings__ConfigurationDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'ConnectionStrings__PersistedGrantDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'ConnectionStrings__IdentityDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'ConnectionStrings__DataProtectionDbConnection=Server=db;Database=IdentityServerAdmin;User Id=sa;Password=${DB_PASSWORD:-Password_123};MultipleActiveResultSets=true;TrustServerCertificate=True'
      - 'AdminConfiguration__IdentityAdminBaseUrl=https://account.openvision.com'
      - 'IdentityServerOptions__IssuerUri=https://auth.openvision.com'
      - IdentityServerOptions__KeyManagement__Enabled=true
      - IdentityServerOptions__Events__RaiseErrorEvents=true
      - IdentityServerOptions__Events__RaiseInformationEvents=true
      - IdentityServerOptions__Events__RaiseFailureEvents=true
      - IdentityServerOptions__Events__RaiseSuccessEvents=true
      - DockerConfiguration__UpdateCaCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - db
    volumes:
      - './shared/serilog.json:/app/serilog.json'
      - './shared/nginx/certs/cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt'
    networks:
      openvisionui:
        aliases:
          - auth.openvision.com
  db:
    image: 'mcr.microsoft.com/mssql/server:2017-CU20-ubuntu-16.04'
    ports:
      - '7900:1433'
    container_name: openvision-db
    environment:
      SA_PASSWORD: '${DB_PASSWORD:-Password_123}'
      ACCEPT_EULA: 'Y'
    volumes:
      - 'dbdata:/var/opt/mssql'
    networks:
      openvisionui: null
volumes:
  dbdata:
    driver: local
networks:
  proxy:
    driver: bridge
  openvisionui:
    driver: bridge
